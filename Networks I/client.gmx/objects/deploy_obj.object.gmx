<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>playable_area</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inicializa barcos

alarm[0] = 15;

boat = 0;

show_debug_message(string(mouse_x));
show_debug_message(string(mouse_y));

randomize()
client = network_create_socket (network_socket_tcp)
network_connect( client, "127.0.0.1", 6510)
buff = buffer_create( 256, buffer_grow, 1)

clients_name = ds_list_create()
clients_x = ds_list_create()
clients_y = ds_list_create()


boats[0,0] = submarino;
boats[0,1] = rebocador;
boats[0,2] = contra_torpedeiro;
boats[0,3] = cruzador;
boats[0,4] = porta_avioes;
boats[1,0] = 1;
boats[1,1] = 2;
boats[1,2] = 3;
boats[1,3] = 4;
boats[1,4] = 5;

for (var i = 0; i = 10; i++;)
    for (var j = 0; j = 10; j++;)
        board[i,j] = false;

//check name avaliability
setup=1
login=0
name_creation_phrase="Digite seu nome :"
alarm[0]=10

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next();
window_set_size(352,768);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buffer_seek(buff, buffer_seek_start, 0)
buffer_write(buff , buffer_string, "client_setup")
buffer_write(buff , buffer_string, client_name)
buffer_write(buff , buffer_s16, x)
buffer_write(buff , buffer_s16, y)
buffer_size = buffer_tell(buff)
network_send_packet( client, buff, buffer_size )
login=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.client_name=get_string(name_creation_phrase, "player"+string(round(random(9999)))) //as you can see the randomize() will be usefull here, its really hard that 2 players will get the same default name
client_name = global.client_name
buffer_seek(buff, buffer_seek_start, 0)
buffer_write(buff , buffer_string, "check_name")
buffer_write(buff , buffer_string, client_name)
buffer_size = buffer_tell(buff)
network_send_packet( client, buff, buffer_size )
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if login=1
    {
    buffer_seek(buff, buffer_seek_start, 0)
    buffer_write(buff , buffer_string, "client_status")
    buffer_write(buff , buffer_s16, mouse_x)
    buffer_write(buff , buffer_s16, mouse_y)
    buffer_size = buffer_tell(buff)
    network_send_packet( client, buff, buffer_size )
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coord_x = floor(mouse_x/32);
coord_y = floor(mouse_y/32);
var m = (boat+1) mod 2;
var flag = false;

//show_message(string(coord_x )+ " "+client_name);

buffer_seek(buff, buffer_seek_start, 0)

//show_message(room)
if room = 2
    {
    buffer_write(buff , buffer_string, "client_attack")
    }
else
    {  
    buffer_write(buff , buffer_string, "client_deploy")
    }
buffer_write(buff , buffer_string, client_name)
buffer_write(buff , buffer_u8, coord_x)
buffer_write(buff , buffer_u8, coord_y)


buffer_size = buffer_tell(buff)
network_send_packet( client, buff, buffer_size )

if (sound_isplaying(intro))
{
    sound_volume(intro,1)
    sound_play(explosion)
    sound_volume(intro,5)                       
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_exists(async_load, "buffer")
    {
net_buff = ds_map_find_value(async_load, "buffer")
    buff_info = buffer_read(net_buff, buffer_string )

    if buff_info="all_clients"
        {
        count=buffer_read(net_buff , buffer_s16 )
        ds_list_clear(clients_name)
        ds_list_clear(clients_x)
        ds_list_clear(clients_y)
        for(i=0;i&lt;count;i++)
            {
            ds_list_add(clients_name,buffer_read(net_buff , buffer_string ))
            ds_list_add(clients_x,buffer_read(net_buff , buffer_s16 ))
            ds_list_add(clients_y,buffer_read(net_buff , buffer_s16 ))
            }
        }

else if buff_info="name_exists"
        {
        setup=buffer_read(net_buff , buffer_bool )
        if setup = 1
            {
            name_creation_phrase="Nome já existe no servidor. Entre com outro nome."
            alarm[0]=1
            }
        if setup = 0
            {
            alarm[1]=1
            show_message("Bem vindo  "+client_name+"!")
            }
        }
else if buff_info="deploy_reply"
        {
        setup_pode=buffer_read(net_buff , buffer_bool )
        setup_desenha=buffer_read(net_buff , buffer_u8 )
        
        //show_message(setup_pode)
        
        if setup_pode = 1
            {
            boat = setup_desenha - 1
            
            instance_create(coord_x * 32, coord_y * 32, boats[0,boat]);
            
            setup_pode = 2            
            show_message("Escolha uma possição para o proximo barco.")
            
            }
        if setup_pode = 0
            {
            show_message("Algum erro ao adicionar o barco, escolha outra possição para ele.")
            }
        }
else if buff_info="start_game"
        {        
        show_message("Se prepare "+client_name+", o jogo vai começar!")
        room_goto_next();
        
        }
else if buff_info="attack_reply"
        {        
            setup_acertou=buffer_read(net_buff , buffer_bool )
            if setup_acertou = 1
                {
                if (sound_isplaying(intro))
                {
                    sound_volume(intro,1)
                    sound_play(explosion)
                    sound_volume(intro,5)                       
                }                
                instance_create(coord_x * 32, coord_y * 32, morte_navio);
                }
            if setup_acertou = 0
                {
                instance_create(coord_x * 32, coord_y * 32, agua_tiro);
                }
        }  
else if buff_info="end_game"
        {
        setup_ganhou=buffer_read(net_buff , buffer_string )
        //show_message(setup_ganhou)
        if client_name = setup_ganhou
            {
            show_message("Parabéns você GANHOU!!!!")
            }           
        else
            {
            sound_stop_all()
            sound_play(defeat)
            show_message("Lerdão, Perdeu!!!!")
            }
            
        }
else if buff_info="wrong_turn"
        {
        show_message("keep calm e espere sua rodada")
        }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count = ds_list_size(clients_name)
if count&gt;0
{
    for(i=0;i&lt;count;i++)
    {
        name=ds_list_find_value(clients_name,i)//name
        xx=ds_list_find_value(clients_x,i)//x
        yy=ds_list_find_value(clients_y,i)//y
        if name != client_name
        {
            draw_circle(xx,yy,10,true)
            draw_set_halign(fa_center)
            draw_set_valign(fa_middle)
            draw_text(xx,yy-32,name)
        }
    }
}
draw_circle(mouse_x,mouse_y,10,false)

if (setup_acertou)
{
    draw_sprite(explode,0,coord_x * 32, coord_y * 32)
    draw_sprite(morte1,0,coord_x * 32, coord_y * 32)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
