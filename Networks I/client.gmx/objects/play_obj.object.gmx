<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

client = global.client
network_connect( client, "127.0.0.1", 6510)
buff = buffer_create( 256, buffer_grow, 1)

clients_name = ds_list_create()
clients_x = ds_list_create()
clients_y = ds_list_create()

setup=1
login=0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buffer_seek(buff, buffer_seek_start, 0)
buffer_write(buff , buffer_string, "client_setup")
buffer_write(buff , buffer_string, global.client_name)
buffer_write(buff , buffer_s16, x)
buffer_write(buff , buffer_s16, y)
buffer_size = buffer_tell(buff)
network_send_packet( client, buff, buffer_size )
login=1


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if login=1
    {
    buffer_seek(buff, buffer_seek_start, 0)
    buffer_write(buff , buffer_string, "client_status")
    buffer_write(buff , buffer_s16, mouse_x)
    buffer_write(buff , buffer_s16, mouse_y)
    buffer_size = buffer_tell(buff)
    network_send_packet( client, buff, buffer_size )
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coord_x = floor(mouse_x/32);
coord_y = floor(mouse_y/32);
var m = (boat+1) mod 2;
var flag = false;

//show_message(string(coord_x )+ " "+client_name);

buffer_seek(buff, buffer_seek_start, 0)
buffer_write(buff , buffer_string, "client_attack")
buffer_write(buff , buffer_string, client_name)
buffer_write(buff , buffer_u8, coord_x)
buffer_write(buff , buffer_u8, coord_y)


buffer_size = buffer_tell(buff)
network_send_packet( client, buff, buffer_size )
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_exists(async_load, "buffer")
    {
net_buff = ds_map_find_value(async_load, "buffer")
    buff_info = buffer_read(net_buff, buffer_string )

    if buff_info="all_clients"
        {
        count=buffer_read(net_buff , buffer_s16 )
        ds_list_clear(clients_name)
        ds_list_clear(clients_x)
        ds_list_clear(clients_y)
        for(i=0;i&lt;count;i++)
            {
            ds_list_add(clients_name,buffer_read(net_buff , buffer_string ))
            ds_list_add(clients_x,buffer_read(net_buff , buffer_s16 ))
            ds_list_add(clients_y,buffer_read(net_buff , buffer_s16 ))
            }
        }
else if buff_info="attack_reply"
        {        
            setup_acertou=buffer_read(net_buff , buffer_bool )
            if setup_acertou = 1
                {
                instance_create(coord_x * 32, coord_y * 32, morte_navio);
                
                }
            if setup_acertou = 0
                {
                instance_create(coord_x * 32, coord_y * 32, agua_tiro);
                }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
